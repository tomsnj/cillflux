apiVersion: apps/v1
kind: Deployment
metadata:
  name: calvite
  labels:
    name: calvite
spec:
  selector:
    matchLabels:
      app: calvite 
  replicas: 1
  template:
    metadata:
      labels:
        app: calvite
    spec:
      initContainers:
      - name: download-config
        image: calvinsteckphoto-admin:latest
        imagePullPolicy: IfNotPresent
#          volumeMounts:
#            - name: kerberos-data
#              mountPath: /home/agent/data/config
#              subPath: config
#            - name: kerberos-data
#              mountPath: /home/agent/data/recordings
#              subPath: recordings
#            - name: kerberos-data
#              mountPath: /home/agent/data/snapshots
#              subPath: snapshots
#            - name: kerberos-data
#              mountPath: /home/agent/data/cloud
#              subPath: cloud
        securityContext:
          runAsUser: 0
          allowPrivlegeEscalation: false
        envFrom:
          - configMapRef:
              name: calvite
        command: ["/bin/sh"]
        args:
          - -c
          - >-
              whoami &&
              env &&
              cat Dockerfile &&
              ls -al
# command: [ "npm run dev -- --host" ]
# command: [ "npm run monitor" ]
      containers:
      - name: calvite 
        image: calvinsteckphoto-admin:latest  # Replace with your image name and tag
        imagePullPolicy: Always
        ports:
        - containerPort: 443 # Replace with the port your app listens on
        envFrom:
          - configMapRef:
              name: calvite
---
apiVersion: v1
kind: Service
metadata:
  name: calvite
  labels:
    name: calvite
spec:
  #type: LoadBalancer
  ports:
    - port: 443
      targetPort: 443
  selector:
    name: calvite
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: calvite-ingress
  labels:
    name: calvite-ingress
  annotations:
    external-dns.alpha.kubernetes.io/target: external.gs-farm.net
    kubernetes.io/ingress.class: external
    kubernetes.io/tls-acme: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-production"
spec:
  ingressClassName: external
  tls:
    - hosts:
        - "cgs312.gs-farm.net"
      secretName: calvite-secret
  rules:
  - host: cgs312.gs-farm.net
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: calvite
            port: 
              number: 443
