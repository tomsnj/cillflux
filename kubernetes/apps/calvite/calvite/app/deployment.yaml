apiVersion: apps/v1
kind: Deployment
metadata:
  name: calvite
  labels:
    name: calvite
spec:
  selector:
    matchLabels:
      app: calvite 
  replicas: 1
  template:
    metadata:
      labels:
        app: calvite
    spec:
      initContainers:
      - name: download-config
        image: calvinsteckphoto-admin:latest
        imagePullPolicy: IfNotPresent
#          volumeMounts:
#            - name: kerberos-data
#              mountPath: /home/agent/data/config
#              subPath: config
#            - name: kerberos-data
#              mountPath: /home/agent/data/recordings
#              subPath: recordings
#            - name: kerberos-data
#              mountPath: /home/agent/data/snapshots
#              subPath: snapshots
#            - name: kerberos-data
#              mountPath: /home/agent/data/cloud
#              subPath: cloud
        securityContext:
          runAsUser: 0
          allowPrivlegeEscalation: false
        envFrom:
          - configMapRef:
              name: calvite
        command: ["/bin/sh"]
        args:
          - -c
          - >-
              whoami &&
              env &&
              ls -al
      containers:
      - name: calvite 
        image: calvinsteckphoto-admin:latest  # Replace with your image name and tag
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80 # Replace with the port your app listens on
        envFrom:
          - configMapRef:
              name: calvite
